// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using new_chess_server.Data;

#nullable disable

namespace new_chess_server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240814163424_UpdateFriendListField")]
    partial class UpdateFriendListField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("new_chess_server.Models.GameStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OnlinePlayed")
                        .HasColumnType("integer");

                    b.Property<int>("OnlineVictory")
                        .HasColumnType("integer");

                    b.Property<int>("PracticePlayedEasy")
                        .HasColumnType("integer");

                    b.Property<int>("PracticePlayedHard")
                        .HasColumnType("integer");

                    b.Property<int>("PracticePlayedMedium")
                        .HasColumnType("integer");

                    b.Property<int>("PracticeVictoryEasy")
                        .HasColumnType("integer");

                    b.Property<int>("PracticeVictoryHard")
                        .HasColumnType("integer");

                    b.Property<int>("PracticeVictoryMedium")
                        .HasColumnType("integer");

                    b.Property<int>("Ranking")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GameStatistics");
                });

            modelBuilder.Entity("new_chess_server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DateJoined")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExternalID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SocialId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("new_chess_server.Models.GameStatistic", b =>
                {
                    b.HasOne("new_chess_server.Models.User", "User")
                        .WithOne("Statistic")
                        .HasForeignKey("new_chess_server.Models.GameStatistic", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("new_chess_server.Models.User", b =>
                {
                    b.HasOne("new_chess_server.Models.User", null)
                        .WithMany("FriendList")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("new_chess_server.Models.User", b =>
                {
                    b.Navigation("FriendList");

                    b.Navigation("Statistic");
                });
#pragma warning restore 612, 618
        }
    }
}
